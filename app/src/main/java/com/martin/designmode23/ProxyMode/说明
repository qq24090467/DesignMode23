意图：

    代理模式的主要作用是为其他对象提供一种代理以控制对这个对象的访问。
    在某些情况下，一个对象不想或者不能直接引用另一个对象，而代理对象可以在客户端和目标对象之间起到中介的作用。
    代理模式的思想是为了提供额外的处理或者不同的操作而在实际对象与调用者之间插入一个代理对象。
    这些额外的操作通常需要与实际对象进行通信。

应用场景：
    例如：假设有一组对象都实现同一个接口，实现同样的方法，但这组对象中有一部分对象需要有单独的方法，
    传统的笨办法是在每一个应用端都加上这个单独的方法，但是代码重用性低，耦合性高。
    如果用代理的方法则很好的解决了这个问题。

代码示例
    假设有一个Italk接口，有空的方法talk（）（说话），所有的people对象都实现（implements）这个接口，实现talk（）方法，
    前端有很多地方都将people实例化，执行talk方法，后来发现这些前端里有一些除了要说话以外还要唱歌（sing），
    那么我们既不能在Italk接口里增加sing()方法，又不能在每个前端都增加sing方法，我们只有增加一个代理类talkProxy，
    这个代理类里实现talk和sing方法，然后在需要sing方法的客户端调用代理类即可.
